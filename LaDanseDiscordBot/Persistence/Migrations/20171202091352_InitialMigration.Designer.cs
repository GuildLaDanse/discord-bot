// <auto-generated />
using LaDanseDiscordBot.Persistence;
using LaDanseDiscordBot.Persistence.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace LaDanseDiscordBot.Persistence.Migrations
{
    [DbContext(typeof(DiscordBotContext))]
    [Migration("20171202091352_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("LaDanseDiscordBot.Persistence.Entities.AccessTokenMapping", b =>
                {
                    b.Property<int>("AccessTokenMappingId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessToken");

                    b.Property<long>("CreatedOn");

                    b.Property<ulong?>("DiscordUserId");

                    b.Property<int>("State");

                    b.HasKey("AccessTokenMappingId");

                    b.HasIndex("DiscordUserId");

                    b.ToTable("AccessTokenMappings");
                });

            modelBuilder.Entity("LaDanseDiscordBot.Persistence.Entities.AuthSession", b =>
                {
                    b.Property<int>("AuthSessionId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreatedOn");

                    b.Property<ulong?>("DiscordUserId");

                    b.Property<string>("Nonce");

                    b.Property<int>("State");

                    b.HasKey("AuthSessionId");

                    b.HasIndex("DiscordUserId");

                    b.ToTable("AuthSessions");
                });

            modelBuilder.Entity("LaDanseDiscordBot.Persistence.Entities.DiscordUser", b =>
                {
                    b.Property<ulong>("DiscordUserId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("DiscordUserId");

                    b.ToTable("DiscordUsers");
                });

            modelBuilder.Entity("LaDanseDiscordBot.Persistence.Entities.AccessTokenMapping", b =>
                {
                    b.HasOne("LaDanseDiscordBot.Persistence.Entities.DiscordUser", "DiscordUser")
                        .WithMany()
                        .HasForeignKey("DiscordUserId");
                });

            modelBuilder.Entity("LaDanseDiscordBot.Persistence.Entities.AuthSession", b =>
                {
                    b.HasOne("LaDanseDiscordBot.Persistence.Entities.DiscordUser", "DiscordUser")
                        .WithMany()
                        .HasForeignKey("DiscordUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
